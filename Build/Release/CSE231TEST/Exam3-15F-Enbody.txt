CSE 231 FS15             Last name (printed):  ________________________________

Exam #3                  First name (printed): ________________________________

Form 3 A                 


Directions:

a. DO NOT OPEN YOUR EXAM BOOKLET UNTIL YOU HAVE BEEN TOLD TO BEGIN.

b. This exam booklet contains 40 questions, each of which will be weighted
equally at 5 points each.  The total points for the exam is 200 points.

c. You may use one 8.5" x 11" note sheet during the exam.  No other reference
materials or electronic devices may be used during the examination, i.e. no
calculators, cell phones, mp3 players, etc. Paper dictionaries are allowed.

d. Questions will not be interpreted during the examination.

e. You should choose the single best alternative for each question, even if
you believe that a question is ambiguous or contains a typographic error.  
If a question has more than one best answer, credit will be given for any 
of the correct answers.

f. Please fill in the requested information at the top of this exam booklet.

g. Use a #2 pencil to encode any information on the OMR form.

h. Please encode the following on the OMR form:

     -- Last name and first initial
     -- MSU PID
     -- Exam form (3 A)

i. Please sign the OMR form.

j. Only answers recorded on your OMR form for multiple choice questions will be 
counted for credit.  Completely erase any responses on the OMR form that you 
wish to delete.

k. You must turn in  the OMR form when you have completed the exam.  
When leaving, please be courteous to those still taking the exam.

Form 3A
1    2    3    4    5    6    7    8    9    10   11   12   13   14   15
C    C    C    B    C    A    E    B    B    C    D    A    C    A    A

16   17   18   19   20   21   22   23   24   25   26   27   28   29   30
D    B    D    B    B    DE   C    B    C    A    A    B    D    A    CD

31   32   33   34   35   36   37   38   39   40
E    B    A    ABCD D    A    D    A    C    B

01. Which of the following prints the first four multiples of three: 3 6 9 12

    A) for i in range(4):
           print(3*i, end=' ')

    B) for i in range(3,12,3):
           print(i, end=' ')

    C) for i in range(1,5):
           print(3*i, end = ' ')

    D) All of the above.

    E) None of the above.

02. Given s = "row, row, row your boat"
    which code produces the following?
   ['row', ' row', ' row your boat']

    A) list(s)
    B) s.split().strip()
    C) s.split(',')
    D) s.strip(',')
    E) None of the above.

03. Given s = "row, row, row your boat"
    What does this code return?
    [x.strip(',') for x in s.split()]

    A) ['row', ' row', ' row your boat']
    B) ['row', 'row', 'row your boat']
    C) ['row', 'row', 'row', 'your', 'boat']
    D) ['row,', 'row,', 'row', 'your', 'boat']
    E) None of the above.

04. Given the list L = [('a', 1), ('b', 7), ('c', 5), ('x', 2)]
    what code generates D = {1:'a', 5:'c', 2:'x', 7:'b'} ?

    A) D = dict(L)
    B) D = dict([(y,x) for x,y in L])
    C) D = { x:y for x,y in L }
    D) D = dict(sorted(L,reverse=True))
    E) None of the above

05. What does this expression return?
    [x for x in range(12) if x%3 == 1]
   
    A) [1]
    B) [0, 3, 6, 9]
    C) [1, 4, 7, 10]
    D) [0, 2, 6, 9, 12]
    E) None of the above

06. If the '+' operator is overloaded, such as in the Time class we defined,
    an expression such as a + b where a and b are Time objects, is called as:

     A) a.__add__(b)
     B) __add__(self,b)
     C) add(self,b)
     D) self.__add__(a,b)
     E) None of the above.

07. Given: s = 'spam'
    what is printed by: print(s.index('x'))

    A) 0
    B) ''
    C) None
    D) -1
    E) None of the above 

08. Given: S1 = {1,2,3} and S2 = {2,3,4}
    what is the value of S after this operation: S = S1 & S2

    A) {1, 2, 3, 4}
    B) {2, 3}
    C) {1, 4}
    D) {}
    E) None of the above

09. Given 
      x = 0
      for i in range(4):
          x = x + 1
      print(i)   # Line 1  (note: this is "i" not "x")

    What is printed by Line 1:

     A) 0
     B) 3
     C) 4
     D) 5
     E) None of the above

10. What is printed by: print(2**3)

     A) 6
     B) 1
     C) 8
     D) 9
     E) None of the above

11. Given 
       s = "slime"
    which statement converts the string to
       s = "slim"

     A) s = s.replace('e','')   # empty string
     B) s = s[:-1]
     C) s = s[:4]
     D) All of the above.
     E) None of the above.
    
12. Given: x = 1
    what is printed by: 
    if x:
        print("Here")
    else:
        print("There")

      A) Here
      B) There
      C) None of the above.    

13. What is printed by: print(2 or 3)

      A) True
      B) False
      C) 2
      D) 3
      E) None of the above.

############
# Figure 1 #
############       

  M = [[1,2,3],[4,5,6],[7,8,9]]
  L = []
  M = sorted(M,reverse=True)
  for lst in M:
      lst.sort(reverse=True)
      for i in lst:
          L.append(i)
  print(L)  # Line 1

14. What is printed by Line 1 when the code in Figure 1 is run? 
                

     A) [9, 8, 7, 6, 5, 4, 3, 2, 1]
     B) [7, 8, 9, 4, 5, 6, 1, 2, 3]
     C) [1, 2, 3, 4, 5, 6, 7, 8, 9]
     D) [3, 2, 1, 6, 5, 4, 9, 8, 7]
     E) None of the above

15.  Given
        f = input("Input a float: ")
     What is the type of f if 7 is input at the prompt?

     A) str
     B) int
     C) float
     D) bool
     E) None of the above.

16. Given D = {}
    What code changes D to be {7:0}?

     A) D[7] = 0
 
     B) try:
            D[7] = 0
        except KeyError:
            D[7] = 0

     C) D[7] = D.get(7,0)

     D) All of the above

     E) None of the above.

17. Consider this code
  L1 = ['a','b']
  L2 = [1, L1, 2]
  L1.append(99)
  print(L2)   # Line 1

  What is printed by Line 1?

   A) [1, ['a', 'b'], 2]
   B) [1, ['a', 'b', 99], 2]
   C) [1, [99], 2]
   D) [1, [['a', 'b'],[99]], 2]
   E) None of the above

############
# Figure 2 #
############       

  def f(x,y):
      x.append(5)
      z = x + y
      return z
      
  A = [1,2]
  B = A
  print(f(A,B))  # Line 1
  print(A)       # Line 2
  print(B)       # Line 3

      
18. When the code in Figure 2 is run what is printed by Line 1?

     A) [1, 2]
     B) [1, 2, 1, 2]
     C) [1, 2, 5, 1, 2]
     D) [1, 2, 5, 1, 2, 5]
     E) None of the above.

19. When the code in Figure 2 is run what is printed by Line 2?

     A) [1, 2]
     B) [1, 2, 5]
     C) [[1, 2], 5]
     D) A
     E) None of the above.

20. When the code in Figure 2 is run what is printed by Line 3?

     A) [1, 2]
     B) [1, 2, 5]
     C) [[1, 2], 5]
     D) A
     E) None of the above.

21. Given L = ['a','x','m','c']
    what is returned by L.remove('x')

     A) ['a', 'm', 'c']
     B) 'x'
     C) 1
     D) None
     E) None of the above

22. Given: 

  L = (('x', 12.3456), ('y', 98.7654))

  what code prints the following? 
  (Note there are two spaces to the left of "x" and "y")

  x: 12.35
  y: 98.77

     A) for i,j in L:
            print("{}:{}".format(i,j))

     B) for i,j in L:
            print("{:3s}:{:>5f}".format(i,j))
    
     C) for i,j in L:
            print("{:>3s}:{:6.2f}".format(i,j))
    
     D) for i,j in L:
            print("{:<3s}:{:>6.2f}".format(i,j))

     E) None of the above.

############
# Figure 3 #
############

  def f(s1,ch1 = 'c'):
      L = []
      x = 0
      for i,ch2 in enumerate(s1):
          if ch1 == ch2:
              L.append(i)
          else:
              x += 1
      return x,L
      
  print(f('Mississippi','i'))  # Line 1
  print(f('abcde'))            # Line 2
    
23. What is printed by Line 1 of Figure 3?

    A) 7, [1, 4, 7, 10]
    B) (7, [1, 4, 7, 10])
    C) 6, 1, 4, 7, 10
    D) (6, [1, 4, 7, 10])
    E) None of the above.

24. What is printed by Line 2 of Figure 3?

    A) 4, 2
    B) 4, [2]
    C) (4, [2])
    D) (4, 2)
    E) None of the above.

  class MyClass (object):                           ############
    def __init__(self, x = None, y = 0):            # Figure 4 #        
        self.D = {}                                 ############
        if y not in self.D and isinstance(x,list):
            self.D[y] = x
        else:
            self.D[y] = []
    
    def __str__(self):
        return 'D: {}'.format(self.D)
    
    def method1(self,x,y):
        if y not in self.D:
            self.D[y] = x
    
    def method2(self,L):
        r = []
        for i in L:
            if i in self.D:
                r.append(self.D[i])
        return MyClass(r)
                
  inst1 = MyClass()
  print(inst1)                  # Line 1
  inst2 = MyClass([1,5,3],2)
  print(inst2)                  # Line 2
  inst2.method1([8,9],1)       
  print(inst2)                  # Line 3
  print(inst2.method2([1,2]))   # Line 4
    
25. What is the output of Line 1 when the program in Figure 4 is executed?

   A) D: {0: []}
   B) D: {0: None}
   C) D: {}
   D) Nothing is printed
   E) None of the above.

26. What is the output of Line 2 when the program in Figure 4 is executed?

   A) D: {2: [1, 5, 3]}
   B) D: {0: [1, 5, 3]}
   C) D: {2: None}
   D) D: {0: []}
   E) None of the above.

27. What is the output of Line 3 when the program in Figure 4 is executed?

   A) D: {1: [8, 9]}
   B) D: {1: [8, 9], 2: [1, 5, 3]}
   C) D: {1: [1, 5, 3, 8, 9]}
   D) D: {2: [1, 5, 3]}
   E) None of the above.

28. What is the output of Line 4 when the program in Figure 4 is executed?

   A) D: {0: [1, 5, 3, 8, 9]]}
   B) D: {0: [8, 9], [1, 5, 3]}
   C) D: {1: [8, 9], 2: [1, 5, 3]}
   D) D: {0: [[8, 9], [1, 5, 3]]}
   E) None of the above.

  D = {0:1, 2:3}                          ############
  s = input("Input something: ")          # Figure 5 #
  try:                                    ############
      x = float(s)
      y = int(s)      
      z = D[x]          # Line 1
  except ValueError:
      print("Oops_1")   # Line 2
  except IndexError:
      print("Oops_2")   # Line 3
  except KeyError:
      print("Oops_3")   # Line 4
  else:
      print(x,y,z)      # Line 5
  finally:
      print("Finally Executed") # Line 6
    
29. What input will cause Line 1 to be executed without error  when Figure 5 is executed?

     A) 0
     B) 1
     C) 1.5
     D) 2.0
     E) None of the above.

30. What input will cause Line 2 to be printed when Figure 5 is executed?

     A) 0
     B) 1
     C) 1.5
     D) 2.0
     E) None of the above.

31. What input will cause Line 3 to be printed when Figure 5 is executed?

     A) 0
     B) 1
     C) 1.5
     D) 2.0
     E) None of the above.

32. What input will cause Line 4 to be executed when Figure 5 is executed?

     A) 0
     B) 1
     C) 1.5
     D) 2.0
     E) None of the above.

33. What input will cause Line 5 to be executed when Figure 5 is executed?

     A) 0
     B) 1
     C) 1.5
     D) 2.0
     E) None of the above.

34. What input will cause Line 6 to be executed when Figure 5 is executed?

     A) 0
     B) 1
     C) 1.5
     D) 2.0
     E) None of the above.

############
# Figure 6 #
############
  class TestClass(object):
      def __init__(self, T=None):
        if T == None:
            self.T = ()
        elif type(T) == tuple:
            self.T = T
        else:
            raise ValueError
        
      def __add__(self,param):
          if type(param) == TestClass:
              L1 = list(self.T)
              L2 = list(param.T)
              REPLACE_1
          else:
              return None
            
      def __radd__(self,param):
          REPLACE_2
        
      def __str__(self):
          # if the class attribute's value is ('x','y'), print as: T: ('x', 'y')
          REPLACE_3    

  # Assume code runs correctly with correct statements in REPLACE_1, REPLACE_2, REPLACE_3.
  inst1 = TestClass(('a','b','c'))
  inst2 = TestClass(('x','y'))
  sum_1 = inst1 + inst2
  print(inst1)                         # Line 1 prints  T: ('a', 'b', 'c')
  print(sum_1)                         # Line 2 prints  T: ('a', 'b', 'c', 'x', 'y')
  print(isinstance(sum_1,TestClass))   # Line 3 prints  True
  print(('x','y') + inst1)             # Line 4

35. For Line 1 to print as
    T: ('a', 'b', 'c')
    what code replaces REPLACE_3 in the __str__ method of Figure 6 ?

    A) print("T:",self.T)
    B) return 'T: ("a", "b", "c")'
    C) return 'T: {}'.format(T)
    D) return 'T: {}'.format(self.T)
    E) None of the above

36. For the method __radd__ to work properly what replaces REPLACE_2?

    A) return self.__add__(param)
    B) return param.__add__(self)
    C) return self.T__add__(param.T)
    D) return TestClass(param.__add__(self))
    E) None of the above

37. For Line 2 to print
    T: ('a', 'b', 'c', 'x', 'y')
    and Line 3 to print True
    what must replace REPLACE_1 in the __add__ method?

    A) return L1 + L2
    B) return tuple(L1 + L2)
    C) return TestClass(L1 + L2)
    D) return TestClass(tuple(L1 + L2))
    E) None of the above

38. What output does Line 4 print when the program in Figure 6 is executed?

    A) None
    B) T: ('a', 'b', 'c')
    C) T: ('x', 'y', 'a', 'b', 'c')
    D) T: ('a', 'b', 'c', 'x', 'y')
    E) None of the above

############
# Figure 7 #
############

class Queue(list):  # note inheritance from list
    '''First item entering queue is the first one removed''
    def __init__(self):
        # Suite 1
    def enQueue(self,item):  # Add item to the back of the Queue
       # Suite 2 
    def deQueue(self): # Remove item from the front of the Queue
        return self.pop(0)

Q = Queue()
print(Q)       # prints []
Q.enQueue('a')
print(Q)       # prints ['a']
Q.enQueue('b')
print(Q)       # prints ['a','b']
Q.enQueue('c')
print(Q)       # prints ['a','b','c']
x = Q.deQueue()
print(Q)       # prints ['b','c']
print(x)       # prints a
  
IMPORTANT: The correct answers to the questions refering to Figure 7 use inhertance.

39. Which line or lines replace the line labeled Suite 1 in Figure 7?

     A) list = []
     B) self.Q = []
     C) list.__init__(self)
     D) list.__init__(self)
        self.Q = []
     E) None of the above
        
40. Which line replaces the line labeled Suite 2 in Figure 7?

     A) self.Q[item]
     B) self.append(item)
     C) self.Q.append(item)
     D) self.Q.extend[item]
     E) None of the above.
