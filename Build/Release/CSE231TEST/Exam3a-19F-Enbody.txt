CSE 231 FS19             Last name (printed):  ________________________________

Exam #3                  First name (printed): ________________________________

Form 3 A


Directions:

a. DO NOT OPEN YOUR EXAM BOOKLET UNTIL YOU HAVE BEEN TOLD TO BEGIN.

b. This exam booklet contains 40 questions, each of which will be weighted
equally at 5 points each.   The total points for the exam is 200 points.

c. You may use one 8.5" x 11" note sheet during the exam.  No other reference
materials or electronic devices may be used during the examination, i.e. no
calculators, cell phones, mp3 players, etc.. Paper dictionaries are allowed.
Use of a device will earn a zero for the course.

d. Questions will not be interpreted during the examination.

e. You should choose the single best alternative for each question, even if
you believe that a question is ambiguous or contains a typographic
error.  If a question has more than one best answer, credit will be
given for any of the correct answers.

f. Please fill in the requested information at the top of this exam booklet.

g. Use a #2 pencil to encode any information on the OMR form.

h. Please encode the following on the OMR form:

     -- Last name and first initial
     -- MSU PID
     -- Exam form (3 A)

i. Please sign the OMR form.

j. Only answers recorded on your OMR form for multiple choice questions will be
counted for credit.  Completely erase any responses on the OMR form that you
wish to delete.

k. You must turn in this exam booklet and the OMR form when you have completed
the exam.  When leaving, please be courteous to those still taking the exam.

Form 3A
1    2    3    4    5    6    7    8    9    10   11   12   13   14   15   
C    A    D    A    D    A    B    C    A    AC   D    B    B    D    A    

16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   
A    B    A    D    B    B    C    C    B    B    A    B    B    C    A    

31   32   33   34   35   36   37   38   39   40   
C    C    E    A    A    C    B    A    C    C   


01. What is printed by: print(5**2)

     A) 7
     B) 10
     C) 25
     D) 32
     E) None of the above

02. Given: x = 12
    what is printed by: print(0 <= x <= 12)

      A) True
      B) False
      C) 0
      D) 12
      E) None of the above. 
	 
03. Given s = "To be, or not to be, that is the question:"
    which code produces the following?
   ['To be', 'or not to be', 'that is the question']

    A) s.split().strip()
    B) s.split(',').strip()      #no space after comma
    C) s.strip(',:').split(',')  #no space after comma
    D) s.strip(',:').split(', ') #space after comma
    E) None of the above.  

04. What is the output when the following for loop is executed?

    for i in range(2,10,2):
	    print(i, end = ' ')
  
    A) 2 4 6 8 
    B) 2 4 6 8 10 
    C) 2 3 4 5 6 7 8 9 
    D) 2 3 4 5 6 7 8 9 10 
    E) None of the above
	
05. Given the list L = [('a', 1), ('b', 7), ('c', 5), ('d', 2)]
    what code generates D = {'a': 1, 'b': 7, 'c': 5, 'd': 2}?

    A) D = dict(L)
    B) D = dict([(x,y) for x,y in L])
    C) D = { x:y for x,y in L }
    D) All of the above
    E) None of the above	
	
06. What does this expression return?
        {a*b for a in range(3) for b in range(3)}
   
    A) {0, 1, 2, 4}
    B) {0, 0, 0, 0, 1, 2, 0, 2, 4}
    C) {0, 1, 2, 3, 4, 6, 9}
    D) {0, 0, 0, 0, 0, 1, 2, 3, 0, 2, 4, 6, 0, 3, 6, 9}
    E) None of the above
	
07. Given: S1 = {1,2,3} and S2 = {1,3,5}
    what is the value of S after this operation: S = S1 ^ S2

    A) {1, 2, 3, 5}
    B) {2, 5}
    C) {1, 3}
    D) {2}
    E) None of the above
08. Given: 
    def f():
       return 5,6
    
    x = f()
    
    What is the type of x?

    A) int
    B) list
    C) tuple
    D) set
    E) None of the above

09. What is the output of the code shown below?

    D = {'mouse':{},'human':{}}   # all curly braces in this line
    D['mouse']['2'] = 4
    D['human']['1'] = 5
    D['human']['1'] += 6
    print(D)
      
    A) {'mouse': {'2': 4}, 'human': {'1': 11}}
    B) {'mouse': {'2': 4}, 'human': {'1': 6}}
    C) {'mouse': {'2': 10}, 'human': {'1': 5}}
    D) {'mouse': {'2': 10}, 'human': {'1': 6}}
    E) None of the above		  
	  
10. Given D = {'a': 11}
    What code changes D to be {'a': 1}?

     A) D['a'] -= 10
 
     B) try:
            D['a'] += 1
        except KeyError:
            D['a'] = 1

     C) D['a'] = D.get('a',0) - 10

     D) All of the above

     E) None of the above.	  
	  
11. Given s = {1,2,3}
    what is printed by print(s.add(4))

     A) {1, 2, 3}
     B) {1, 2, 3, 4}
     C) {}
     D) None
     E) None of the above


############
# Figure 1 #
############
  # It is likely helpful to diagram these lists
  L1 = [2,4,6]
  L2 = ['x','y',L1]
  print(L2)       # Line 1
  L3 = L1
  L3[0]='ZZ'
  print(L1)       # Line 2
  print(L2)       # Line 3
  print(L1 is L3) # Line 4
      
12. What is printed by Line 1 when Figure 1 is executed?

    A) ['x', 'y', L1]
    B) ['x', 'y', [2, 4, 6]]
    C) ['x', 'y', 2, 4, 6]
    D) ['x', 'y'] 
    E) None of the above.

13. What is printed by Line 2 when Figure 1 is executed?

    A) [2, 4, 6]
    B) ['ZZ', 4, 6]
    C) []
    D) None
    E) None of the above.

14. What is printed by Line 3 when Figure 1 is executed?

    A) ['x', 'y', L1]
    B) ['x', 'y', [2, 4, 6]]
    C) ['x', 'y', 2, 4, 6]
    D) ['x', 'y', ['ZZ', 4, 6]]
    E) None of the above.

15. What is printed by Line 4 when Figure 1 is executed?

    A) True
    B) False
    C) None of the above.  
	  

############
# Figure 2 #
############       

  M = [[1,2,3],[4,5,6],[7,8,9]]
  L = []
  M = sorted(M,reverse=True)
  for lst in M:
      lst.sort(reverse=True)
      for i in lst:
          L.append(i)
  print(L)  # Line 1

16. What is printed by Line 1 when the code in Figure 2 is run? 
                

     A) [9, 8, 7, 6, 5, 4, 3, 2, 1]
     B) [7, 8, 9, 4, 5, 6, 1, 2, 3]
     C) [1, 2, 3, 4, 5, 6, 7, 8, 9]
     D) [3, 2, 1, 6, 5, 4, 9, 8, 7]
     E) None of the above


############
# Figure 3 #
############

  L = [1,2,3,4,5,6,7,8,9]       
  i = 0                         
  s = ''                        
  while i < len(L):
      if i%2 == 1:
          i += 1
          continue
      elif i>8:
          break
      s += str(L[i])
      i += 2
  else:
      print("else executed")  # Line 1
  
  print(s)  # Line 2

17. What is the output of Line 2 when the program in Figure 3 is executed?

   A) 1357
   B) 13579
   C) 3579
   D) 02468
   E) None of the above.

18. When the program in Figure 3 is run Line 1 is executed.

   A) True
   B) False



############
# Figure 4 #
############       

  def f(x,y):
      x.append(5)
      z = x + y
      return z
      
  A = [1,2]
  B = A
  print(f(A,B))  # Line 1
  print(A)       # Line 2
  print(B)       # Line 3

      
19. When the code in Figure 4 is run what is printed by Line 1?

     A) [1, 2]
     B) [1, 2, 1, 2]
     C) [1, 2, 5, 1, 2]
     D) [1, 2, 5, 1, 2, 5]
     E) None of the above.

20. When the code in Figure 4 is run what is printed by Line 2?

     A) [1, 2]
     B) [1, 2, 5]
     C) [[1, 2], 5]
     D) A
     E) None of the above.

21. When the code in Figure 4 is run what is printed by Line 3?

     A) [1, 2]
     B) [1, 2, 5]
     C) [[1, 2], 5]
     D) A
     E) None of the above.

  	class Shape(object):                    ############
      	    def __init__(self,n="Shape"):       # Figure 5 #
          	self.name = n                   ############
      	    def __str__(self):
          	return self.name

  	class Polygon(Shape):
      	    def __init__(self,ss,n="Polygon"):
          	Shape.__init__(self,n)
          	self.sides = [float(s) for s in ss]

      	    def perimeter(self):
          	return sum(self.sides)

  	class Triangle(Polygon):
      	    def __init__(self,s1=1,s2=1,s3=1,n="Triangle"):
          	Polygon.__init__(self, [s1,s2,s3], n)
  
	t = Triangle(3,4,5)
	print(t)                 # Line 1
	print(t.perimeter())     # Line 2
	p = Polygon([2,3,2,4])
	print(p)                 # Line 3
	print(p.perimeter())     # Line 4  
  
22. What output does Line 1 from Figure 5 produce?

    A) Shape 
    B) Polygon
    C) Triangle
    D) Triangle [3.0,4.0,5.0]
    E) None of the above

23. What output does Line 2 from Figure 5 produce?

    A) 60
    B) 12
    C) 12.0
    D) None
    E) None of the above

24. What output does Line 3 from Figure 5 produce?

    A) Shape 
    B) Polygon
    C) Triangle
    D) Polygon [2.0,3.0,2.0,4.0]
    E) None of the above

25. What output does Line 4 from Figure 5 produce?

    A) 11
    B) 11.0
    C) 48
    D) None
    E) None of the above

############
# Figure 6 #
############

  def read_file(fp,D):
      for L in fp:
          L = L.strip().split(',')
          t = (L[0][0],L[0][1])
          D[t]={}
          for L2 in L[1:]:
              L2 = L2.split()
              D[t][L2[0]]= set(L2[1:])
              
  fp = open('test.txt')
  D = {}
  read_file(fp,D)
  
  print(D[('x','y')])            		 # Line 1  
  print(D[('a','b')]['y'])       		 # Line 2    
  print(D[('x','y')]['a'] & D[('a','b')]['x'])   # Line 3
      
  S = set()
  for v in D.values():
      for w in v.values():
          for x in w:
              S.add(x)
  print(S)                       # Line 4
  
  File "test.txt":
    ab, x 1 2 3, y 2 4 6
    xy, a 3 5 7, b 1 2 4

26. What output does Line 1 from Figure 6 produce?

    A) {'a': {'3', '5', '7'}, 'b': {'1', '2', '4'}}
    B) {'x': {'1', '2', '3'}, 'y': {'2', '4', '6'}}
    C) [{'3', '5', '7'}, {'1', '2', '4'}]
    D) [{'1', '2', '3'}, {'2', '4', '6'}]
    E) None of the above.

27. What output does Line 2 from Figure 6 produce?

    A) {'3', '5', '7'}
    B) {'2', '4', '6'}
    C) {'1', '2', '4'}
    D) {'1', '2', '3'}
    E) None of the above.

28. What output does Line 3 from Figure 6 produce?

    A) {'4'}
    B) {'3'}
    C) {'1', '2', '3', '5', '7'}
    D) {'1', '2', '4', '6'}
    E) None of the above.

29. What output does Line 4 from Figure 6 produce?

    A) {'1', '3', '5', '7'}
    B) {'1', '2', '4', '6'}
    C) {'1', '2', '3', '4', '5', '6', '7'}
    D) {'a', 'b', 'x', 'y'}
    E) None of the above.

############
# Figure 7 #
############
  
  class Classy(object):
      def __init__(self,a=2,b=3):
          self.first = int(a)
          self.__second = int(b)
  
      def __str__(self):
          return str(self.first) + str(self.__second)
  
  try:    
      A = Classy()
      print(A)          # Line 1
      A.first = 7
      print(A)          # Line 2
      print(A.first)    # Line 3
      B = Classy('a')
      print(B)          # Line 4
  except ValueError:
      print("exception!")


30. What output does Line 1 from Figure 7 produce?

    A) 23
    B) 32
    C) 2+3
    D) ab
    E) None of the above

31. What output does Line 2 from Figure 7 produce?

    A) 23
    B) 32
    C) 73
    D) 27
    E) None of the above

32. What output does Line 3 from Figure 7 produce?

    A) 2
    B) 3 
    C) 7
    D) a
    E) None of the above

33. What output does Line 4 from Figure 7 produce?

    A) 2a
    B) a3 
    C) a7
    D) 7a
    E) None of the above

  class TestClass(object):
      def __init__(self,L=None):         ############
          self.L = []                    # Figure 8 #
          if L:                          ############
              for i in L:
                  if i:
                      self.L.append(i)
		      self.L.sort()

      def __add__(self,param):
          if type(param) == TestClass:
              self.L.extend(param.L)
              return TestClass(self.L)
          else:
              return self.L + param

      def __str__(self):
          return 'L: {}'.format(self.L)

  inst1 = TestClass([-1,0,0,1,2,3])
  print(inst1)                               # Line 1
  inst2 = TestClass([4,2,3])
  sum_inst_1 = inst1 + inst2
  sum_inst_2 = inst2 + [7,8,9]               # Line X
  print(inst1)                               # Line 2
  print(sum_inst_1)                          # Line 3
  print(sum_inst_2)                          # Line 4
  print(isinstance(sum_inst_1,TestClass))    # Line 5

34. What is printed by Line 1 when Figure 8 is executed?

    A) L: [-1, 1, 2, 3]
    B) [-1, 1, 2, 3]
    C) L: [-1, 0, 1, 2, 3]
    D) [-1, 0, 1, 2, 3]
    E) None of the above

35. What is printed by Line 2 when Figure 8 is executed?

    A) L: [-1, 1, 2, 3, 2, 3, 4]
    B) [-1, 1, 2, 3, 2, 3, 4]
    C) L: [-1, 1, 2, 2, 3, 3, 4]
    D) [-1, 1, 2, 2, 3, 3, 4]
    E) None of the above

36. What is printed by Line 3 when Figure 8 is executed?

    A) L: [-1, 1, 2, 3, 2, 3, 4]
    B) [-1, 1, 2, 3, 2, 3, 4]
    C) L: [-1, 1, 2, 2, 3, 3, 4]
    D) [-1, 1, 2, 2, 3, 3, 4]
    E) None of the above

37. What is printed by Line 4 when Figure 8 is executed?

    A) L: [2, 3, 4, 7, 8, 9]
    B) [2, 3, 4, 7, 8, 9] 
    C) L: [2, 3, 4, [7, 8, 9]]
    D) [2, 3, 4, [7, 8, 9]]
    E) None of the above

38. What is printed by Line 5 when Figure 8 is executed?

    A) True          B) False
39. Consider the class in Figure 8. What happens when this expression is executed?
    Note the order is switched from the similar expression Line X in Figure 8.

   [7,8,9] + inst2

    A) The expression evaluates without an error and returns a list.
    B) The expression evaluates without an error and returns a TestClass instance.
    C) The expression generates an error, but can be fixed by adding an __radd__ method
       to the class TestClass.
    D) The expression generates an error and there is no code that can be added to
       class TestClass that can prevent an error.
    E) None of the above

40. Given: 

  L = (('x', 12.3456), ('y', 98.7654))

  what code prints the following?

  x: 12.35
  y: 98.77
1234567890
 
  (Note there are two spaces to the left of "x" and "y")
  The digits 1234567890 are there to help you count spaces;
  they are not part of the print loop. 
  The leftmost output of a print lines up with the leftmost digit 1.


     A) for i,j in L:
            print("{}:{}".format(i,j))

     B) for i,j in L:
            print("{:3s}:{:>5f}".format(i,j))
    
     C) for i,j in L:
            print("{:>3s}:{:6.2f}".format(i,j))
    
     D) for i,j in L:
            print("{:<3s}:{:>6.2f}".format(i,j))

     E) None of the above.
