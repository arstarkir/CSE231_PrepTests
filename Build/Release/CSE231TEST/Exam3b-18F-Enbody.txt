CSE 231 FS18             Last name (printed):  ________________________________

Exam #3                  First name (printed): ________________________________

Form 3 B


Directions:

a. DO NOT OPEN YOUR EXAM BOOKLET UNTIL YOU HAVE BEEN TOLD TO BEGIN.

b. This exam booklet contains 40 questions, each of which will be weighted
equally at 5 points each.   The total points for the exam is 200 points.

c. You may use one 8.5" x 11" note sheet during the exam.  No other reference
materials or electronic devices may be used during the examination, i.e. no
calculators, cell phones, mp3 players, etc.. Paper dictionaries are allowed.

d. Questions will not be interpreted during the examination.

e. You should choose the single best alternative for each question, even if
you believe that a question is ambiguous or contains a typographic
error.  If a question has more than one best answer, credit will be
given for any of the correct answers.

f. Please fill in the requested information at the top of this exam booklet.

g. Use a #2 pencil to encode any information on the OMR form.

h. Please encode the following on the OMR form:

     -- Last name and first initial
     -- MSU PID
     -- Exam form (3 B)

i. Please sign the OMR form.

j. Only answers recorded on your OMR form for multiple choice questions will be
counted for credit.  Completely erase any responses on the OMR form that you
wish to delete.

k. You must turn in this exam booklet and the OMR form when you have completed
the exam.  When leaving, please be courteous to those still taking the exam.

Form 3B
1    2    3    4    5    6    7    8    9    10   11   12   13   14   15
B    B    B    A    D    D    C    B    C    B    A    B    B    D    C

16   17   18   19   20   21   22   23   24   25   26   27   28   29   30
D    A    C    C    B    C    C    B    A    B    AB   A    C    A    B

31   32   33   34   35   36   37   38   39   40
B    A    A    A    A    D    D    C    B    B

01. What is printed by?

      val1 = 3                  
      val2 = 2                  
      val1, val2 = val2, val1   
      print(val1, val2)         

    A) 3 2
    B) 2 3
    C) 2
    D) 3
    E) None of the above.

02. What is printed by?
    print(3**3+1)

    A) 7
    B) 28
    C) 10
    D) 16
    E) None of the above.

03. What is printed by?
       a = 20
       if a == 3 or not(a < 10):
          print("No")
       else:
          print("Yes")

    A) Yes
    B) No
    C) a is 3
    D) None
    E) None of the above.

04. What is printed by this sequence of instructions?

       x = 1
       y = 0
       z = 1
       print(x or (y and not z))

    A) 1
    B) 0
    C) True
    D) False
    E) None of the above.

05. What is printed by?

    count = 0

    while count < 3:
        print('count:',end = ' ')   # the string is a single space
        count += 1

    A) 0 1 2
    B) 0 1 2 3
    C) count: 0 1 2 
    D) count: count: count:
    E) None of the above

06. What is printed by?
   
      for i in range(10,2,-3):
         print(i, end = ' ')   # the string is a single space

    A) 2 5 8 10
    B) 10 7 4 1
    C) 2 5 8
    D) 10 7 4
    E) None of the above.

07. What is printed by?
        s = "Game"
        for i in s:
           print(i, end = ' ')    # the string is a single space

    A) Game
    B) 01234 
    C) G a m e
    D) i i i i i
    E) None of the above.

08. What is printed by this sequence of instructions?

       L1 = [3,5]
       L2 = [2,4]
       print(L1 + L2)

    A) [2, 3, 4, 5]
    B) [3, 5, 2, 4] 
    C) [[3, 5], [2, 4]]
    D) [3, 5, [2, 4]]
    E) None of the above.

09. Which of the following prints the first four multiples of three: 3 6 9 12

    A) for i in range(4):
           print(3*i, end=' ')

    B) for i in range(3,12,3):
           print(i, end=' ')

    C) for i in range(1,5):
           print(3*i, end = ' ')

    D) All of the above.

    E) None of the above.

10. Given e = 2.7182818284
    What is printed by
        print("{:>10.2f}".format(e))
    (The sting of digits 0123456789012345 is to help you determine alignment.)

    A)        2.71
        0123456789012345 

    B)        2.72
        0123456789012345 

    C)  2.71
        0123456789012345 

    D)  2.72
        0123456789012345 
    
    E) None of the above

11. What is printed by
   
      nums=list()
      for n in range(4):
          nums.insert(0,n**2)
      print(nums)

    A) [9,4,1,0] 
    B) [1,4,9,25]
    C) [0,1,4,9]
    D) [25,9,4,1]
    E) None of the above

12. What is printed by
   
    T1 = (7,8)
    T1 += (2,1)
    print(T1)

    A) ((7, 8), (2, 1))
    B) (7, 8, 2, 1)
    C) (9, 9)
    D) (1, 2)
    E) None of the above

13. Given s = "Baa, Baa, Black Sheep"
    which code produces the following?
    ['Baa', 'Baa', 'Black Sheep']

    A) s.split(',')     # Note no space
    B) s.split(', ')    # Note one space after comma
    C) s.split().strip()
    D) list(s)
    E) None of the above.

14. Consider this code

  L1 = [1,2]
  L2 = [3, L1, 4]
  L1.append(5)
  print(L2)   # Line 1

  What is printed by Line 1?

    A) [3, 'L1', 4]
    B) [3, [1, 2], 4]
    C) [3, [5], 4]
    D) [3, [1, 2, 5], 4]
    E) None of the above

15. Given this sequence of instructions:

    L1 = [1,2,3]
    L2 = ['a',L1[:],'b',L1]
    L1.append(4)
    print(L2)

    What is printed?

    A) ['a',L1[:],'b',L1]
    B) ['a', [1, 2, 3, 4], 'b', [1, 2, 3, 4]]
    C) ['a', [1, 2, 3], 'b', [1, 2, 3, 4]]
    D) ['a', [1, 2, 3,4], 'b', [1, 2, 3]]
    E) None of the above.

16. The key of a dictionary must be:

    A) an int, float, or string
    B) an int or string
    C) Mutable
    D) Immutable
    E) None of the above.

17. Given M = {'Bob': 27, 'Alice': 75}
    What is printed by 
        print(M['Bob'])

    A) 27
    B) 75
    C) 'Bob'
    D) 'Bob': 27
    E) None of the above.

18. If the '+' operator is overloaded, as in the Example class of the Chapter 12 Exercises
    an expression such as a + b where a and b are Example objects, 
    and __add__ is defined with method header: def __add__(self,param):
    Which best describes how the paramaters are assigned?

     A) Example maps to self, and b maps to param
     B) b maps to self, and Example maps to param
     C) a maps to self, and b maps to param
     D) b maps to self, and a maps to param
     E) None of the above.

############
# Figure 1 #
############

	in_str = 'Frick & Frack'
	a = ''
	d=0
	for c in 'abcdefghijklmnopqrstuvwxyz': #lower case alphabet
         	if c in in_str:
            	     a=c+a
         	else:
            	     d=d+1
	
        print(c) #Line 1
	print(d) #Line 2	
        print(a) #Line 3

19. What is printed by Line 1 in Figure 1?

    A) a
    B) y
    C) z
    D) None
    E) None of the above.

20. What is printed by Line 2 in Figure 1?

    A) 5
    B) 21
    C) 10
    D) 86
    E) None of the above.

21. What is printed by Line 3 in Figure 1?

    A) FrickFrack
    B) acikr
    C) rkica
    D) [14, 11, 22]
    E) None of the above.


############
# Figure 2 #
############     

  def f(a,b):
      if b:
          b.append('w')
      a += b
      return b
  
  w = 3
  x = 0
  y = [4,3]
  z = [5,4]
  print(f(w,x))    # Line 1
  print(f(y,z))    # Line 2
  print(w)         # Line 3
  print(y)         # Line 4

22. What is printed by Line 1 in Figure 2?
  
    A) 30
    B) 3
    C) 0
    D) None
    E) None of the above.

23. What is printed by Line 2 in Figure 2?

    A) [5, 4]
    B) [5, 4, 'w']
    C) [4, 3, 5, 4]
    D) [4, 3, 5, 4, 'w']
    E) None of the above.

24. What is printed by Line 3 in Figure 2?

    A) 3
    B) 0
    C) 30
    D) None
    E) None of the above.
    
25. What is printed by Line 4 in Figure 2?

    A) [4, 3, 5, 4]
    B) [4, 3, 5, 4, 'w']
    C) [5, 4]
    D) [5, 4, 'w']
    E) None of the above.

############
# Figure 3 #
############

	class Animal( object ):
    	    def __init__( self, n='', k=None ):
               self._name = n
               self._kind = k
    
            def __str__( self ):
                return "{} {}".format( self._kind,self._name )

	class Ape( Animal ):
    	    def __init__( self, n='', k='Ape' ):
                Animal.__init__( self, n, k )

	class Chimp( Ape ):
    	    def __init__( self, n ):
                Animal.__init__( self, n, 'Chimp' )
        
	class Human( Animal ):
    	    def __init__( self, n = 'Simon' ):
                Animal.__init__( self, n, 'Human' )
    
            def __str__( self ):
                return self._name

	A1 = Ape( 'Milo' )
	A2 = Ape( 'Harambe', 'Gorilla' )
	C = Chimp( 'Sam' )
	H = Human()

	print( A1, A2 )       #Line 1
	print( C, H )         #Line 2
	print( H._kind )      #Line 3
	print( isinstance(H, Human), isinstance( H, Animal) )   #Line 4
  
26. Which of the following is present in Fig. 3?
    
    A) inheritance
    B) subclass and superclass
    C) overloading
    D) All of the above.
    E) None of the above.

27. What is printed by Line 1 in Figure 3?

    A) Ape Milo Gorilla Harambe
    B) Ape Milo Ape Harambe
    C) Milo Gorilla Harambe
    D) Milo Harambe
    E) None of the above

28. What is printed by Line 2 in Figure 3?

    A) Chimp Sam
    B) Sam Simon
    C) Chimp Sam Simon
    D) Chimp Sam Human Simon
    E) None of the above

29. What is printed by Line 3 in Figure 3?

    A) Human
    B) Animal
    C) Simon
    D) Ape
    E) None of the above
	
30. What is printed by Line 4 in Figure 3?

    A) True False
    B) True True
    C) False False
    D) False True
    E) None of the above

  class Order:
      def __init__(self, cart = None, customer = 'Bob'):
          self.customer = customer
          if cart == None:                          ############
                self.cart = []                      # Figure 4 #
          else:                                     ############
                self.cart = list(cart)
  
      def __str__ ( self ):
          return self.customer+': '+ str(self.cart)
  
      def __add__(self, other):
          if type(other) == Order:
                new_cart = self.cart + other.cart
                return Order(new_cart, self.customer)
          else:
              self.cart.append(other)
              return self.cart
  
      def __getitem__(self, key):
          return self.cart[key+1]
  
  order1 = Order(['banana', 'apple', 'mango'], 'Alice')
  order2 = Order(['carrot', 'pepper', 'tomato'], 'Alice')
  order  = order1 + order2
  print(order1)                             # Line 1
  print(order)                              # Line 2
  print(isinstance(order,Order))            # Line 3
  print(order1[0])                          # Line 4
  order3 = order1 + 'oranges'
  print(order3)                             # Line 5

31. What is printed by Line 1 in Figure 4?

    A) ['banana', 'apple', 'mango']
    B) Alice: ['banana', 'apple', 'mango']
    C) ['banana', 'apple', 'mango', 'carrot', 'pepper', 'tomato']
    D) Alice: ['banana', 'apple', 'mango', 'carrot', 'pepper', 'tomato']
    E) None of the above

32. What is printed by Line 2 in Figure 4?

    A) Alice: ['banana', 'apple', 'mango', 'carrot', 'pepper', 'tomato']
    B) ['banana', 'apple', 'mango', 'carrot', 'pepper', 'tomato']
    C) error
    D) Order
    E) None of the above

33. What is printed by Line 3 in Figure 4?
    A) True     B) False        C) None of the above
	
34. What is printed by Line 4 in Figure 4?

    A) apple                            D) None
    B) banana                           E) None of the above
    C) tomato

35. What is printed by Line 5 in Figure 4?

    A) ['banana', 'apple', 'mango', 'oranges']
    B) Alice: ['banana', 'apple', 'mango', 'oranges']
    C) ['banana', 'apple', 'mango', ['oranges']]
    D) Alice: ['banana', 'apple', 'mango', ['oranges']]
    E) None of the above

  class MyClass (object):
        def __init__(self, S=None):             ############
            if S:                               # Figure 5 #
                self.S = set(S)                 ############
            else:
                self.S = set()
    
        def __str__(self):
            s = 'L: '
            L = sorted(self.S,reverse=True) # sorted returns a list
            for i in L:
                s += str(i) + " "
            return s
    
        def method1(self,x):
            self.S.add(x)
    
  list1 = [5,1,8,1] 
  A = MyClass(list1)
  print(A)                      # Line 1
  A.method1(3)       
  print(A)                      # Line 2
     

36. What is printed by Line 1 in Figure 5?

   A) L: [8, 5, 1, 1]
   B) L: {1, 5, 8}
   C) L: 5 1 8 1
   D) L: 8 5 1
   E) None of the above

37. What is printed by Line 2 in Figure 5?

   A) L: [8, 5, 3, 1, 1]
   B) L: {1, 3, 5, 8}
   C) L: 5 1 8 1 3
   D) L: 8 5 3 1
   E) None of the above


############
# Figure 6 #
############
  D = {"a": [{1,3,5},{2,4,6}], "x": [{1,2,3},{4,5,6}]}
  
  print(D["a"][0] & D["x"][1])    # Line 1
  print(sum(D['x'][1]))           # Line 2
  
  L = []
  c = 0
  for i in D.values():
      L.append(i[c])
      c += 1
  print(L)                        # Line 3
  
38. What is printed by Line 1 in Figure 6?

  A) {1, 3, 4, 5, 6}
  B) {1, 3, 5, 4, 5, 6}
  C) {5}
  D) {1, 3, 5, 6}
  E) None of the above.

39. What is printed by Line 2 in Figure 6?

  A)  6
  B) 15
  C) 21
  D) None
  E) None of the above.

40. What is printed by Line 3 in Figure 6?

  A) [1, 3, 5, 4, 5, 6]
  B) [{1, 3, 5}, {4, 5, 6}]
  C) [[1, 3, 5], [4, 5, 6]]
  D) {1, 3, 4, 5, 6}
  E) None of the above.
