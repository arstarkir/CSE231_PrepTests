CSE 231 SS19             Last name (printed):  ________________________________

Exam #3                  First name (printed): ________________________________

Form 3 C


Directions:

a. DO NOT OPEN YOUR EXAM BOOKLET UNTIL YOU HAVE BEEN TOLD TO BEGIN.

b. This exam booklet contains 40 questions, each of which will be weighted
equally at 5 points each.   The total points for the exam is 200 points.

c. You may use one 8.5" x 11" note sheet during the exam.  No other reference
materials or electronic devices may be used during the examination, i.e. no
calculators, cell phones, mp3 players, etc.. Paper dictionaries are allowed.

d. Questions will not be interpreted during the examination.

e. You should choose the single best alternative for each question, even if
you believe that a question is ambiguous or contains a typographic
error.  If a question has more than one best answer, credit will be
given for any of the correct answers.

f. Please fill in the requested information at the top of this exam booklet.

g. Use a #2 pencil to encode any information on the OMR form.

h. Please encode the following on the OMR form:

     -- Last name and first initial
     -- MSU PID
     -- Exam form (3 C)

i. Please sign the OMR form.

j. Only answers recorded on your OMR form for multiple choice questions will be
counted for credit.  Completely erase any responses on the OMR form that you
wish to delete.

k. You must turn in this exam booklet and the OMR form when you have completed
the exam.  When leaving, please be courteous to those still taking the exam.

Form 3C
1    2    3    4    5    6    7    8    9    10   11   12   13   14   15
A    A    B    D    C    A    B    C    A    B    D    B    B    A    A

16   17   18   19   20   21   22   23   24   25   26   27   28   29   30
A    D    A    D    C    B    A    B    B    A    D    A    A    E    D

31   32   33   34   35   36   37   38   39   40
D    C    C    B    D    A    A    B    E    BC

01. What is printed by?
    print(2 + 2 % 3)

    A) 4
    B) 1
    C) 2
    D) 0
    E) None of the above.

02. What is printed by?
   
	i = 0
	while i < 4:
    	    print(i, end =' ') #space between the single quotes
            i += 1
	else:
            print(0)

    A) 0 1 2 3 0
    B) 0 1 2 0
    C) 0 1 2
    D) 0 1 2 3
    E) None of the above.

03. What is printed by?
 
      print(16 % 15 // 16)         


    A) 0.0
    B) 0
    C) 1.0
    D) 1
    E) None of the above.

04. Given
       value = input("Input a number: ")
    What is the type of value if 7 is input at the prompt?

    A) float
    B) long
    C) int
    D) str
    E) None of the above

05. What is printed by?
	
	#"All Summer Long" lyrics Kid Rock
	Line1 = "it was 1989"
	Line2 = "my thoughts were short my hair was long"
	Line3 = "it was summertime in Northern Michigan"
	Line4 = Line1 + Line2 + Line3   
	print(Line2.find('my'), Line4.count('was')) 

    A) (0, 3)
    B) True 1
    C) 0 3
    D) True 2
    E) None of the above.


06. What is printed by the following?
    Hint: careful, you are iterating through x and appending to x.

	x = ['AB', 'CD'] 
	for i in x: 
    	    x.append(i.lower()) 
	print(x)
	

    A) No Output (Infinite loop) 
    B) ['AB', 'CD', 'ab', 'cd'] 
    C) ['ab', 'cd'] 
    D) ['a','b','c','d']
    E) None of the above.

07. Analyze the following code:
	Given: number = 27
	#Code 1:
	if number % 2 != 0: 
    	    odd = True
	else: 
    	    odd = False

	#Code 2:
	odd = number % 2 != 0

    A) Both Code 1 and Code 2 have errors.
    B) Both Code 1 and Code 2 are correct.
    C) Code 1 has errors.
    D) Code 2 has errors.
    E) None of the above.

08. Given L = [], What is printed by:
       if L:
           print('first')
       else:
           print('second')

     A) None
     B) first
     C) second
     D) firstsecond
     E) None of the above

09. What is printed by this sequence of instructions?

	L = [(1, 2), (3, 4), (5, 6)]
	res = [list(x) for x in L]
	print(res)  

    A) [[1, 2], [3, 4], [5, 6]]
    B) [(1, 2), (3, 4), (5, 6)]
    C) [1, 2, 3, 4, 5, 6]
    D) [[1, 2, 3, 4, 5, 6]]
    E) None of the above.

10. What is printed by 
        D = dict() 
	for i in range (4): 
    	    for j in range(2): 
        	D[i] = j 
	print(D)

    A) {0: 0, 1: 0, 2: 0, 3: 0, 0: 1, 1: 1, 2: 1, 3: 1}
    B) {0: 1, 1: 1, 2: 1, 3: 1}
    C) {0: 0, 1: 0, 2: 0, 3: 0}
    D) TypeError: Immutable object
    E) None of the above.

11. What is printed by
   
	T1 = (2) 
	T2 = (1, 4) 
	T1 += 6
	print(T1, T1 + T2) 

    A) (6, 1, 4)
    B) (2, 6, 1, 4)
    C) (8, 1, 4)
    D) TypeError
    E) None of the above

12. What is printed by
   
	L = [1, 3, 5, 7, 9] 
	print(L.pop(-2), L.remove(L[1]), L) 


    A) None 1 [1, 5, 9]
    B) 7 None [1, 5, 9]
    C) 7 None [3, 5, 7, 9]
    D) None 1 [1, 3, 7, 9]
    E) None of the above


13. Given this sequence of instructions:

    L1 = [1,2,3]
    L2 = ['a',L1[:],'b',L1]
    L1.append(4)
    print(L2)

    What is printed?

    A) ['a', [1, 2, 3, 4], 'b', [1, 2, 3, 4]]
    B) ['a', [1, 2, 3], 'b', [1, 2, 3, 4]]
    C) ['a', [1, 2, 3,4], 'b', [1, 2, 3]]
    D) ['a',L1[:],'b',L1]
    E) None of the above.

############
# Figure 1 #
############

  def f(s1,ch1 = 'c'):
      L = []
      x = 0
      for i,ch2 in enumerate(s1):
          if ch1 != ch2:
              x += 1
          else:
              L.append(i)              
      return x,L
      
  print(f('Tennessee','e'))     # Line 1
  print(f('abcd'))              # Line 2
    
14. What is printed by Line 1 of Figure 1?

    A) (5, [1, 4, 7, 8])
    B) (5, [2, 5, 8, 9])
    C) 5, [2, 5, 8, 9]
    D) 5, [1, 4, 7, 8]
    E) None of the above

15. What is printed by Line 2 of Figure 1?

    A) (3, [2])
    B) 3, [2]
    C) (3, [1])
    D) 3, [1]
    E) None of the above

############
# Figure 2 #
############     

  def square(x,l=[]): 
    for i in range(x): 
        l.append(i*i) 
    print(l)

  cube(3)           # Line 1
  cube(3,[3,2,1])   # Line 2 

16. What is printed by Line 1 in Figure 2?

    A) [0, 1, 4]
    B) [0, 1, 2, 3]
    C) [3, 3]
    D) [1]
    E) None of the above.


17. What is printed by Line 2 in Figure 2?

    A) [3, 2, 1, 0, 1]
    B) [0, 1, 4]
    C) [9, 4, 1]
    D) [3, 2, 1, 0, 1, 4]
    E) None of the above

18. If the '-' operator is overloaded, as in the Example class of the Chapter 12 Exercises
    an expression such as a - b where a and b are Example objects, 
    and __sub__ is defined with method header: def __sub__(self,param):
    Which best describes how the paramaters are assigned?

     A) a maps to self, and b maps to param
     B) b maps to self, and a maps to param
     C) Example maps to self, and b maps to param
     D) b maps to self, and Example maps to param
     E) None of the above.

############
# Figure 3 #
############

  def f(L = None, D={},x=12):
      
      for item in L:
          if item < x:
              D['A'].add(item)
          else:
              D['B'].add(item)
  
  L1 = [11, 9, 16, 13, 2, 22, 16]
  D1 = {'A':set(), 'B':set()}
  f(L1,D1)
  print(D1['A'])   # Line 1
  print(D1['B'])   # Line 2

19. What is printed by Line 1 in Figure 3?

    A) [16, 13, 22, 16]
    B) [11, 9, 16, 13, 2, 22, 16]
    C) {16, 13, 22}
    D) {9, 2, 11}
    E) None of the above.

20. What is printed by Line 2 in Figure 3?

    A) [16, 13, 22, 16]
    B) [11, 9, 16, 13, 2, 22, 16]
    C) {16, 13, 22}
    D) {9, 2, 11}
    E) None of the above.

21. What is printed by the following list of instructions:

	from operator import itemgetter 
	L = [{ "name" : "Ali", "age" : 8},  
	     { "name" : "Anna", "age" : 8 }, 
	     { "name" : "Zach" , "age" : 7 }] 
	print(sorted(L, key=itemgetter('age'))) 

    A) [{'name': 'Ali', 'age': 8}, {'name': 'Anna', 'age': 8}, {'name': 'Zach', 'age': 7}]
    B) [{'name': 'Zach', 'age': 7}, {'name': 'Ali', 'age': 8}, {'name': 'Anna', 'age': 8}]
    C) [8, 8, 7]
    D) [7, 8, 8]
    E) None of the above.

22. What is printed by the following list of instructions:
	d={'Aiden': 18,'Anna':12,'Zach':22}
	items = [(v, k) for k, v in d.items()]
	items.sort()
	items = dict([(k, v) for v, k in items])
	print(items)

    A) {'Anna': 12, 'Aiden': 18, 'Zach': 22}
    B) {'Zach': 22, 'Aiden': 18, 'Anna': 12}
    C) [12, 18, 22]
    D) [22, 18, 12]
    E) None of the above.


############
# Figure 4 #
############

  tup_list = []
  for x in range(3):
      for y in range(1,3):
          if x <= y:
             tup_list.append((x,y))

  print(len(tup_list))           # Line 1
  D = {}
  for tup in tup_list:
      D[tup]=set(tup)
  print( D[(1,2)] | D[(0,1)])    # Line 2
  print(D[(1,1)])                # Line 3
  
  
23. What is printed by Line 1 of Figure 4?
    
    A) 6
    B) 5
    C) 4
    D) 3
    E) None of the above.

24. What is printed by Line 2 of Figure 4?

    A) {0, 1, 1, 2}
    B) {0, 1, 2}
    C) {0, 1}
    D) {0}
    E) None of the above.

25. What is printed by Line 3 of Figure 4?

    A) {1}
    B) {}
    C) {1, 1}
    D) None
    E) None of the above.


############
# Figure 5 #
############
  
  class Classy(object):
      def __init__(self,a=7,b=3):
          self.first = int(a)
          self.__second = int(b)
  
      def __str__(self):
          return str(self.first) + str(self.__second)
  
  try:    
      A = Classy()
      print(A)          # Line 1
      A.first = 2
      print(A)          # Line 2
      print(A.first)    # Line 3
      B = Classy('a')
      print(B)          # Line 4
  except ValueError:
      print("exception!")


26. What output does Line 1 from Figure 5 produce?

    A) ab
    B) 7+3
    C) 37
    D) 73
    E) None of the above

27. What output does Line 2 from Figure 5 produce?

    A) 23
    B) 32
    C) 73
    D) 27
    E) None of the above

28. What output does Line 3 from Figure 5 produce?

    A) 2
    B) 3 
    C) 7
    D) a
    E) None of the above

29. What output does Line 4 from Figure 5 produce?

    A) 2a
    B) a3 
    C) a7
    D) 7a
    E) None of the above


############
# Figure 6 #
############

  class Vehicle( object ): 
      def __init__(self, n='', m=None):
          self._name = n      
          self._model = m
                
      def __str__( self ):
          return self._name
 
  class Car( Vehicle ): 
      def __init__(self, n='Dodge', c='Red', m='Caravan'):
          Vehicle.__init__(self,n, m)       
          self._color = c
 
      def __str__( self ):
          return "{} {} {}".format(self._color, self._name, self._model)

  class Truck( Vehicle ): 
      def __init__( self, n = 'Dodge'):
          Vehicle.__init__( self, n, 'RAM3500' )
    
      def __str__( self ):
          return "{} {}".format( self._name, self._model )
                
  C1 = Car()
  C2 = Car( 'Mustang', 'Red', 'GT350')
  T = Truck()

  print( C1, C2 )       #Line 1
  print( C1, T )         #Line 2
  print( T._model )      #Line 3
  print( isinstance(T, Truck), isinstance( T, Vehicle) )   #Line 4  
  

30. What is printed by Line 1 in Figure 6?

    A) Dodge Mustang
    B) Caravan GT350
    C) Red Mustang GT350
    D) Red Dodge Caravan Red Mustang GT350
    E) None of the above

31. What is printed by Line 2 in Figure 6?

    A) Dodge
    B) Caravan
    C) Caravan RAM3500
    D) Red Dodge Caravan Dodge RAM3500
    E) None of the above

32. What is printed by Line 3 in Figure 6?

    A) Truck          D) None
    B) Dodge          E) None of the above
    C) RAM3500
	
33. What is printed by Line 4 in Figure 6?

    A) False True     D) False False
    B) True False     E) None of the above
    C) True True     
class TestClass(object):
    def __init__(self,L=None):         ############
        self.L = []                    # Figure 7 #
        if L:                          ############
            for i in L:
                if i not in self.L:
                    self.L.append(i)

    def __add__(self,param):
        if type(param) == TestClass:
            self.L.extend(param.L)
            return TestClass(self.L)
        else:
            return self.L + param

    def __str__(self):
        return 'L: {}'.format(self.L)

inst1 = TestClass([1,2,2,3,3])
print(inst1)                               # Line 1
inst2 = TestClass([2,3,4])
sum_inst_1 = inst1 + inst2
sum_inst_2 = inst2 + [7,8,9]
print(inst1)                               # Line 2
print(sum_inst_1)                          # Line 3
print(sum_inst_2)                          # Line 4
print(isinstance(sum_inst_1,TestClass))    # Line 5

34. What is printed by Line 1 when Figure 7 is executed?

    A) L: 1, 2, 3
    B) L: [1, 2, 3]
    C) [1, 2, 3]
    D) [1, 2, 2, 3, 3]
    E) None of the above

35. What is printed by Line 2 when Figure 7 is executed?

    A) [1, 2, 3, 2, 3, 4]
    B) L: [1, 2, 3]
    C) L: [1, 2, 3, 4]
    D) L: [1, 2, 3, 2, 3, 4]
    E) None of the above

36. What is printed by Line 3 when Figure 7 is executed?

    A) L: [1, 2, 3, 4]
    B) L: [1, 2, 3, 2, 3, 4]
    C) [1, 2, 3, 4]
    D) [1, 2, 3, 2, 3, 4]
    E) None of the above

37. What is printed by Line 4 when Figure 7 is executed?

    A) [2, 3, 4, 7, 8, 9]
    B) [2, 3, 4, [7, 8, 9]] 
    C) L: [2, 3, 4, 7, 8, 9]
    D) L: [2, 3, 4, [7, 8, 9]]
    E) None of the above

38. What is printed by Line 5 when Figure 7 is executed?

    A) False
    B) True

############
# Figure 8 #
############

  import matplotlib.pyplot as plt
  v1 = [20, 80, 50]
  v2 = [15, 12]
  plt.bar(v1,v2)
  
39. What happens when the code in Figure 8 is run?

    A) Draws a scatter plot, v1 values on x-axis, v2 values on y-axis 
    B) Draws a scatter plot, v2 values on x-axis, v1 values on y-axis 
    C) Draws a bar plot, v2 values on x-axis, v1 values on y-axis
    D) Draws a bar plot, v1 values on x-axis, v2 values on y-axis
    E) None of the above


40. Which of the following prints the first column titled "values"  
	from a DataFrame object named data_frame?
	Note that DataFrame is a data structure in Pandas library.
		
    A) print(data_frame.columns[0])
    B) print(data_frame.values)
    C) print(data_frame["values"])
    D) All of the above
    E) None of the above
